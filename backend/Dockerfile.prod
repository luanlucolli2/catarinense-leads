# ./backend/Dockerfile.prod (NOVO ARQUIVO)

# --- Estágio 1: Builder ---
# Usamos um "build stage" para instalar dependências sem sobrecarregar a imagem final.
FROM composer:2 as builder
WORKDIR /app
COPY composer.json composer.lock ./
# Instala apenas dependências de produção e otimiza o autoloader
RUN composer install --no-dev --no-interaction --optimize-autoloader

# --- Estágio 2: Imagem Final ---
# Usamos uma imagem oficial, leve e segura do PHP-FPM com Alpine Linux.
FROM php:8.3-fpm-alpine

# Instala extensões PHP essenciais para o Laravel
RUN docker-php-ext-install pdo pdo_mysql

# Define o diretório de trabalho
WORKDIR /var/www/html

# Copia as dependências já instaladas do estágio "builder"
COPY --from=builder /app/vendor/ ./vendor/
# Copia todo o código da aplicação Laravel
COPY . .

# Ajusta as permissões das pastas que o Laravel precisa escrever.
# Isso é CRUCIAL para evitar erros de permissão em produção.
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# O Render irá usar o `startCommand` do `render.yaml` para iniciar o PHP-FPM.