# ./render.yaml (VERSÃO CORRIGIDA)

services:
  # 1. Serviço para o Frontend (React/Vite)
  - type: static_site # CORREÇÃO: "static" alterado para "static_site"
    name: frontend
    # Garante que o deploy só acontece se houver mudanças no frontend
    buildFilter:
      paths:
        - lead-import-visualizer/**
    # Comandos para instalar dependências e buildar o projeto
    buildCommand: |
      cd lead-import-visualizer &&
      npm install &&
      npm run build
    # Pasta onde o Vite coloca os arquivos finais do build
    staticPublishPath: ./lead-import-visualizer/dist
    # Regra essencial para Single Page Applications (SPAs) como o React
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # 2. Serviço para a API (Backend Laravel)
  - type: web
    name: backend
    env: docker
    dockerContext: ./backend
    dockerfilePath: ./backend/Dockerfile.prod
    buildFilter:
      paths:
        - backend/**
    healthCheckPath: /api/health # Lembre-se de criar esta rota no seu api.php
    envVars:
      - key: APP_URL
        fromService:
          type: web
          name: backend
          property: url
      - key: FRONTEND_URL
        fromService:
          type: static_site # CORREÇÃO: "static" alterado para "static_site"
          name: frontend
          property: url
      - key: DB_CONNECTION
        value: mysql # ATENÇÃO: Verifique se o serviço de DB abaixo é mysql ou psql
      - key: DB_HOST
        fromService:
          type: psql
          name: database
          property: internalHost
      - key: DB_DATABASE
        fromService:
          type: psql
          name: database
          property: database
      - key: DB_USERNAME
        fromService:
          type: psql
          name: database
          property: user
      - key: DB_PASSWORD
        fromService:
          type: psql
          name: database
          property: password
      - fromGroup: laravel-secrets
    # Comando para rodar as migrations e otimizações antes de iniciar o servidor
    startCommand: |
      php artisan migrate --force &&
      php artisan config:cache &&
      php artisan route:cache &&
      /usr/sbin/php-fpm83 -O # Ajuste a versão do php-fpm se necessário

  # 3. Serviço de Worker para Filas do Laravel
  - type: worker
    name: queue-worker
    env: docker
    dockerContext: ./backend
    dockerfilePath: ./backend/Dockerfile.prod
    buildFilter:
      paths:
        - backend/**
    startCommand: "php artisan queue:work --verbose --tries=3 --timeout=120"
    envVars:
      - fromGroup: laravel-secrets

  # 4. Banco de Dados Gerenciado
  - type: psql # PostgreSQL é a opção mais comum e robusta nos planos gratuitos
    name: database
    plan: free

# --- GRUPO DE SEGREDOS ---
envVarGroups:
  - name: laravel-secrets
    envVars:
      - key: APP_KEY
        sync: false
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: SANCTUM_STATEFUL_DOMAINS
        fromService:
          type: static_site # CORREÇÃO: "static" alterado para "static_site"
          name: frontend
          property: url